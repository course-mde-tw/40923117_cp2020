<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Ahoy!</h1>
<h2>Date</h2>
<h3>W1</h3>
<p><span>進入 </span><a href="https://kaggle.com/">https://kaggle.com</a><span>  利用 Python Notebook 練習 Python 程式</span></p>
<div class="line number1 index0 alt2"><code class="py plain">var1 </code><code class="py keyword">=</code> <code class="py value">1</code></div>
<div class="line number2 index1 alt1"><code class="py plain">var2 </code><code class="py keyword">=</code> <code class="py value">1.01</code></div>
<div class="line number3 index2 alt2"><code class="py plain">var3 </code><code class="py keyword">=</code> <code class="py string">"integer"</code></div>
<div class="line number4 index3 alt1"><code class="py plain">var4 </code><code class="py keyword">=</code> <code class="py string">"float number"</code></div>
<div class="line number5 index4 alt2"><code class="py plain">_var5 </code><code class="py keyword">=</code> <code class="py string">"Hello"</code></div>
<div class="line number6 index5 alt1"><code class="py functions">print</code><code class="py plain">(_var5 </code><code class="py keyword">+</code> <code class="py string">","</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(var1) </code><code class="py keyword">+</code> <code class="py string">" is an "</code> <code class="py keyword">+</code> <code class="py plain">var3 </code><code class="py keyword">+</code> <code class="py string">"."</code><code class="py plain">)</code></div>
<div class="line number6 index5 alt1"><code class="py plain"></code></div>
<h3><span face="monospace" style="font-family: monospace;">W2</span></h3>
<h4 class="line number6 index5 alt1">下載可攜式Python套件</h4>
<p>網址:<a href="http://a.kmol.info:88/">http://a.kmol.info:88</a></p>
<p>進入Github創造一個cp2020的倉儲</p>
<p><img alt="" height="923" src="/images/1.PNG" width="835"/></p>
<h3>W3</h3>
<p><span>完成亂數分組和分組倉儲  每班分成五組 </span></p>
<p>1a</p>
<p>group 1:<br/><br/>Repository:<span> </span><a href="https://github.com/40923102/cp2020">40923102</a><span> </span>| Site:<span> </span><a href="https://40923102.github.io/cp2020">40923102</a><br/>Repository:<span> </span><a href="https://github.com/40923103/cp2020">40923103</a><span> </span>| Site:<span> </span><a href="https://40923103.github.io/cp2020">40923103</a><br/>Repository:<span> </span><a href="https://github.com/40923117/cp2020">40923117</a><span> </span>| Site:<span> </span><a href="https://40923117.github.io/cp2020">40923117</a><br/>Repository:<span> </span><a href="https://github.com/40923119/cp2020">40923119</a><span> </span>| Site:<span> </span><a href="https://40923119.github.io/cp2020">40923119</a><br/>Repository:<span> </span><a href="https://github.com/40923123/cp2020">40923123</a><span> </span>| Site:<span> </span><a href="https://40923123.github.io/cp2020">40923123</a><span> </span>(組長)<br/>Repository:<span> </span><a href="https://github.com/40923127/cp2020">40923127</a><span> </span>| Site:<span> </span><a href="https://40923127.github.io/cp2020">40923127</a><br/>Repository:<span> </span><a href="https://github.com/40923131/cp2020">40923131</a><span> </span>| Site:<span> </span><a href="https://40923131.github.io/cp2020">40923131</a><br/>Repository:<span> </span><a href="https://github.com/40923133/cp2020">40923133</a><span> </span>| Site:<span> </span><a href="https://40923133.github.io/cp2020">40923133</a><br/>Repository:<span> </span><a href="https://github.com/40923141/cp2020">40923141</a><span> </span>| Site:<span> </span><a href="https://40923141.github.io/cp2020">40923141</a><br/>Repository:<span> </span><a href="https://github.com/40923144/cp2020">40923144</a><span> </span>| Site:<span> </span><a href="https://40923144.github.io/cp2020">40923144</a><br/>Repository:<span> </span><a href="https://github.com/40923148/cp2020">40923148</a><span> </span>| Site:<span> </span><a href="https://40923148.github.io/cp2020">40923148</a><br/>Repository:<span> </span><a href="https://github.com/40923149/cp2020">40923149</a><span> </span>| Site:<span> </span><a href="https://40923149.github.io/cp2020">40923149</a><br/><br/><br/>==============================<br/><br/>group 2:<br/><br/>Repository:<span> </span><a href="https://github.com/40623219/cp2020">40623219</a><span> </span>| Site:<span> </span><a href="https://40623219.github.io/cp2020">40623219</a><br/>Repository:<span> </span><a href="https://github.com/40923101/cp2020">40923101</a><span> </span>| Site:<span> </span><a href="https://40923101.github.io/cp2020">40923101</a><br/>Repository:<span> </span><a href="https://github.com/40923104/cp2020">40923104</a><span> </span>| Site:<span> </span><a href="https://40923104.github.io/cp2020">40923104</a><br/>Repository:<span> </span><a href="https://github.com/40923107/cp2020">40923107</a><span> </span>| Site:<span> </span><a href="https://40923107.github.io/cp2020">40923107</a><br/>Repository:<span> </span><a href="https://github.com/40923115/cp2020">40923115</a><span> </span>| Site:<span> </span><a href="https://40923115.github.io/cp2020">40923115</a><br/>Repository:<span> </span><a href="https://github.com/40923124/cp2020">40923124</a><span> </span>| Site:<span> </span><a href="https://40923124.github.io/cp2020">40923124</a><br/>Repository:<span> </span><a href="https://github.com/40923125/cp2020">40923125</a><span> </span>| Site:<span> </span><a href="https://40923125.github.io/cp2020">40923125</a><span> </span>(組長)<br/>Repository:<span> </span><a href="https://github.com/40923136/cp2020">40923136</a><span> </span>| Site:<span> </span><a href="https://40923136.github.io/cp2020">40923136</a><br/>Repository:<span> </span><a href="https://github.com/40923142/cp2020">40923142</a><span> </span>| Site:<span> </span><a href="https://40923142.github.io/cp2020">40923142</a><br/>Repository:<span> </span><a href="https://github.com/40923151/cp2020">40923151</a><span> </span>| Site:<span> </span><a href="https://40923151.github.io/cp2020">40923151</a><br/>Repository:<span> </span><a href="https://github.com/40923152/cp2020">40923152</a><span> </span>| Site:<span> </span><a href="https://40923152.github.io/cp2020">40923152</a><br/><br/><br/>==============================<br/><br/>group 3:<br/><br/>Repository:<span> </span><a href="https://github.com/s40723154/cp2020">40723154</a><span> </span>| Site:<span> </span><a href="https://s40723154.github.io/cp2020">40723154</a><br/>Repository:<span> </span><a href="https://github.com/40828127/cp2020">40828127</a><span> </span>| Site:<span> </span><a href="https://40828127.github.io/cp2020">40828127</a><br/>Repository:<span> </span><a href="https://github.com/40923106/cp2020">40923106</a><span> </span>| Site:<span> </span><a href="https://40923106.github.io/cp2020">40923106</a><br/>Repository:<span> </span><a href="https://github.com/40923108/cp2020">40923108</a><span> </span>| Site:<span> </span><a href="https://40923108.github.io/cp2020">40923108</a><br/>Repository:<span> </span><a href="https://github.com/40923118/cp2020">40923118</a><span> </span>| Site:<span> </span><a href="https://40923118.github.io/cp2020">40923118</a><br/>Repository:<span> </span><a href="https://github.com/40923120/cp2020">40923120</a><span> </span>| Site:<span> </span><a href="https://40923120.github.io/cp2020">40923120</a><br/>Repository:<span> </span><a href="https://github.com/40923126-1/cp2020">40923126</a><span> </span>| Site:<span> </span><a href="https://40923126-1.github.io/cp2020">40923126</a><span> </span>(組長)<br/>Repository:<span> </span><a href="https://github.com/40923128/cp2020">40923128</a><span> </span>| Site:<span> </span><a href="https://40923128.github.io/cp2020">40923128</a><br/>Repository:<span> </span><a href="https://github.com/40923138/cp2020">40923138</a><span> </span>| Site:<span> </span><a href="https://40923138.github.io/cp2020">40923138</a><br/>Repository:<span> </span><a href="https://github.com/40923145/cp2020">40923145</a><span> </span>| Site:<span> </span><a href="https://40923145.github.io/cp2020">40923145</a><br/>Repository:<span> </span><a href="https://github.com/40923150/cp2020">40923150</a><span> </span>| Site:<span> </span><a href="https://40923150.github.io/cp2020">40923150</a><br/><br/><br/>==============================<br/><br/>group 4:<br/><br/>Repository:<span> </span><a href="https://github.com/40923113/cp2020">40923113</a><span> </span>| Site:<span> </span><a href="https://40923113.github.io/cp2020">40923113</a><br/>Repository:<span> </span><a href="https://github.com/40923114/cp2020">40923114</a><span> </span>| Site:<span> </span><a href="https://40923114.github.io/cp2020">40923114</a><br/>Repository:<span> </span><a href="https://github.com/40923116/cp2020">40923116</a><span> </span>| Site:<span> </span><a href="https://40923116.github.io/cp2020">40923116</a><span> </span>(組長)<br/>Repository:<span> </span><a href="https://github.com/40923121/cp2020">40923121</a><span> </span>| Site:<span> </span><a href="https://40923121.github.io/cp2020">40923121</a><br/>Repository:<span> </span><a href="https://github.com/40923129/cp2020">40923129</a><span> </span>| Site:<span> </span><a href="https://40923129.github.io/cp2020">40923129</a><br/>Repository:<span> </span><a href="https://github.com/a40923137/cp2020">40923137</a><span> </span>| Site:<span> </span><a href="https://a40923137.github.io/cp2020">40923137</a><br/>Repository:<span> </span><a href="https://github.com/40923140/cp2020">40923140</a><span> </span>| Site:<span> </span><a href="https://40923140.github.io/cp2020">40923140</a><br/>Repository:<span> </span><a href="https://github.com/40923146/cp2020">40923146</a><span> </span>| Site:<span> </span><a href="https://40923146.github.io/cp2020">40923146</a><br/>Repository:<span> </span><a href="https://github.com/40923147/cp2020">40923147</a><span> </span>| Site:<span> </span><a href="https://40923147.github.io/cp2020">40923147</a><br/><br/><br/>==============================<br/><br/>group 5:<br/><br/>Repository:<span> </span><a href="https://github.com/40923105/cp2020">40923105</a><span> </span>| Site:<span> </span><a href="https://40923105.github.io/cp2020">40923105</a><br/>Repository:<span> </span><a href="https://github.com/40923109/cp2020">40923109</a><span> </span>| Site:<span> </span><a href="https://40923109.github.io/cp2020">40923109</a><br/>Repository:<span> </span><a href="https://github.com/40923110/cp2020">40923110</a><span> </span>| Site:<span> </span><a href="https://40923110.github.io/cp2020">40923110</a><br/>Repository:<span> </span><a href="https://github.com/40923111/cp2020">40923111</a><span> </span>| Site:<span> </span><a href="https://40923111.github.io/cp2020">40923111</a><br/>Repository:<span> </span><a href="https://github.com/40923122/cp2020">40923122</a><span> </span>| Site:<span> </span><a href="https://40923122.github.io/cp2020">40923122</a><br/>Repository:<span> </span><a href="https://github.com/40923130/cp2020">40923130</a><span> </span>| Site:<span> </span><a href="https://40923130.github.io/cp2020">40923130</a><br/>Repository:<span> </span><a href="https://github.com/40923134/cp2020">40923134</a><span> </span>| Site:<span> </span><a href="https://40923134.github.io/cp2020">40923134</a><br/>Repository:<span> </span><a href="https://github.com/40923135/cp2020">40923135</a><span> </span>| Site:<span> </span><a href="https://40923135.github.io/cp2020">40923135</a><span> </span>(組長)<br/>Repository:<span> </span><a href="https://github.com/40923139/cp2020">40923139</a><span> </span>| Site:<span> </span><a href="https://40923139.github.io/cp2020">40923139</a><br/>Repository:<span> </span><a href="https://github.com/40923143/cp2020">40923143</a><span> </span>| Site:<span> </span><a href="https://40923143.github.io/cp2020">40923143</a><br/>Repository:<span> </span><a href="https://github.com/40923153/cp2020">40923153</a><span> </span>| Site:<span> </span><a href="https://40923153.github.io/cp2020">40923153</a></p>
<p></p>
<h3>W5</h3>
<p><span>用Kaggle</span><span>列印</span><a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0762</a><span>的學員名單</span></p>
<p><img alt="" height="958" src="/images/2.PNG" width="1920"/></p>
<h2>HW1</h2>
<p>CH6</p>
<h3 contenteditable="true" data-element="title">RAM Basics RAM基本運作原理</h3>
<p id="N10677" lang="">In order for a computer to function, it needs a temporary storage space to store data that is input into the computer from the user or the hard drive, and to store data that is about to be written to more permanent storage. This temporary storage is called RAM, or random access memory. RAM is the workspace for the CPU to process data. When the computer boots up the OS (operating system) loads the start files into RAM. RAM is dynamic and constantly changing. It operates much faster than a hard drive, and can be changed at any time by the computer. RAM is volatile memory which means it loses all its information when power is removed, so it can only be used as temporary storage. This memory is used for operating systems startup files (bootstrap loader), programs, data, and disk caching. Adding RAM to a computer is one of the easiest and most effective upgrades a person can perform, since it drastically improves the transfers between the CPU and the other input devices (like hard drives), and this increases the overall speed of the computer.</p>
<div class="imagewrap"><span class="image">                                                        <img alt="Photograph of 1GB random access memory board." class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH06/webcontent/PCH06/image1.png" title="Photograph of 1GB random access memory board."/></span></div>
<div class="imagewrap"><span class="caption" lang="">Random access memory board. Photo used under CC-BY-SA license from<span> </span><a href="https://flic.kr/p/5WwhEQ" id="_i_1" lang="" target="_blank">Matt Keifer</a>.</span></div>
<div actguid="d87f2de70a0001dc695afe016fb525c5" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2de70a0001dc695afe016fb525c5&amp;userGUID=40923117%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch06_lbd01">
<div class="activityhead"></div>
</div>
</div>
<p><span>為了使電腦正常運行，它需要一個臨時存儲空間來存儲從用戶或硬碟輸入到電腦中的數據，並將要寫入的數據存儲到永久的儲存空間中。</span><span>該臨時存儲稱為RAM或隨機存取記憶體。</span><span>RAM是給CPU處理資料的暫存區。</span><span>計算機啟動時，作業系統（operating system，簡稱OS）將啟動文件加載到RAM中。</span><span>RAM是動態的並且不斷變化。</span><span>它的運行速度比硬碟快得多，並且可由電腦隨時讀寫。</span><span>RAM是易失性內存，這意味著在斷電時它會丟失所有資料，因此只能用作臨時存儲。</span><span>該內存用於作業系統啟動文件（啟動程序），程序，數據和磁碟緩存。向電腦添加RAM是最簡單且最有效的升級之一，因為它可以極大地改善CPU與其他輸入設備（如硬碟）之間的傳輸，從而提高了電腦的整體速度。</span></p>
<h3>Memory Modules 記憶體模組</h3>
<p>One of the uses of memory is to serve as a disk cache. Like the caches we mentioned in the processor, the RAM acts as a faster, temporary storage area for recently used and commonly used data from the hard drive. Because it is quicker to access RAM than to seek out the data in the hard drive’s sectors, RAM increases the performance of the machine. Disk caching can be used only when there is available extra space in the memory. But what happens if you do not have enough physical memory available? When there is not enough physical memory, the computer creates virtual memory. Virtual memory is sometimes referred to as "page files" or “swap files.” Virtual memory is a slow substitute for RAM since it is a temporary file created on the hard drive and emulates the physical RAM. Essentially, disk caching allows RAM to act like an extremely fast hard drive, while virtual memory consists of files on the hard drive acting as extremely slow memory. RAM is faster than either magnetic storage (like hard drives and floppy disks) or optical storage (DVD, CD, Blu-ray). This is because RAM is a solid-state device without exceedingly long access times. RAM operates in the billionths of a second (nanoseconds), while hard drives and other magnetic media are very slow, operating in the thousandths of a second (milliseconds). Insufficient RAM causes a computer to operate more slowly. So, upgrading RAM is one of the most common upgrades performed by an A+ technician.</p>
<p>                                                      <img alt="Photograph of random access memory board installed on motherboard" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH06/webcontent/PCH06/image2.png"/></p>
<p><span><span>內存的用途之一是充當磁碟緩存。</span><span>就像我們在處理器中提到的緩存一樣，RAM充當了硬碟中最近使用和常用的數據的更快的臨時儲存區。</span><span>由於訪問RAM比查找硬碟磁區中的數據更快，因此RAM可提高計算機的性能。</span><span>僅能當記憶體中有可用空間時才可以使用磁碟緩存。</span><span>但是，如果您沒有足夠的實體記憶體</span></span><span><span>可用怎麼辦？</span><span>當實體記憶體不足時，計算機將創建虛擬記憶體。</span><span>虛擬記憶體有時也稱為“分頁檔</span></span><span><span>”或“交換空間”。</span><span>虛擬記憶體是RAM的慢速替代品，因為它是在硬碟驅動器上創建的臨時文件，並模擬RAM。</span><span>本質上，</span><span>磁碟緩存使RAM可以充當極快的硬碟，而虛擬記憶體由硬碟上的文件組成，它們的運行速度非常慢。</span><span>RAM的速度比磁儲存（如硬碟和磁片）或光存儲（DVD，CD，藍光）要快。</span><span>這是因為RAM是固態設備，訪問時間沒有特別長。</span><span>RAM的運行速度為"十億分之一秒"，而硬碟和其他磁性介質的運行速度非常慢，為"千分之一秒"。</span><span>RAM不足會導致計算機運行更慢。</span><span>因此，升級RAM是A+技術人員執行的最常見的升級之一。</span></span></p>
<h3><span><span>Classifying Memory 記憶體分類</span></span></h3>
<h4 contenteditable="true" lang=""><span title="Quick scroll up">Classifying Memory</span></h4>
<p id="N106A0" lang="">There are multiple classifications for RAM: memory module type, chip type, speed, and parity. Memory modules vary by type, which is defined by the motherboard and the motherboard’s form factor. Memory modules are defined by the number of pins they have on the modules, like 240-pin DIMM (dual in-line memory module), 184-pin DIMM, etc.</p>
<p id="N106A3" lang="">RAM is also classified based upon memory chip type. In the past, systems used different types of chips based on their manufacturer, but current systems use mostly the same type, usually DDR (dual data rate), DDR2, or DDR3. Although the DDR is the most common type, some unique systems may use RDRAM (Rambus dynamic random access memory).</p>
<p id="N106A6" lang="">Another RAM classification is based on speed. Older memory was classified in nanoseconds (for example, 60 nanoseconds). Over time, all memory became nearly the same speed, as measured in nanoseconds, so they changed this to bus speed (for example, PC-133 memory operates at a bus speed of 133 MHz). Most contemporary memory is now measured in throughput (PC2-6400, which operates at 800 MHz but has 6.4 GBps of bandwidth).</p>
<p id="N106A9" lang="">Finally, memory can be purchased with and classified by parity, non-parity, or ECC. Parity memory checks for errors as data is read/written to the chip. While parity memory can detect an error, it cannot correct it. Non-parity memory, one of the most common types found in desktop computers, has no error checking ability. Error correcting code (ECC) is an advanced version of parity that can find an error and correct that error as it is read/written from the chip. Due to these additional functions, ECC tends to be slower than equivalent non-parity RAM.</p>
<div class="imagewrap">                                                                      <img alt="Photograph of random access memory board." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH06/webcontent/PCH06/image3.png"/></div>
<p><span><span>RAM有多種分類：記憶體模塊類型，芯片類型，速度和奇偶校驗位類型。</span></span></p>
<p><span><span>記憶體模塊因類型而異，具體取決於母板和母板的外形尺寸。記憶體模塊由其上的針腳數量定義，例如240針DIMM（雙列直插式記憶體），184針DIMM等。</span></span></p>
<p><span><span>RAM也根據存儲芯片類型進行分類。過去，系統根據製造商使用不同類型的芯片，但是當前的系統大多使用相同類型的芯片，通常是DDR（雙倍資料率），DDR2或DDR3。儘管DDR是最常見的類型，但某些獨特的系統可能會使用RDRAM（Rambus(公司)<b>動態隨機存取記憶體</b>）。</span></span></p>
<p>另一個RAM分類基於速度。較舊的內存以納秒（例如60納秒）分類。隨著時間的流逝，所有內存變為幾乎相同的速度（以納秒為單位），因此他們將其更改為總線速度（例如，PC-133內存以133 MHz的總線速度運行）。現在，大多數當代內存都是通過吞吐量來衡量的（PC2-6400，運行於800 MHz，但具有6.4 GBps的帶寬）。</p>
<p>最後，可以使用奇偶校驗，非奇偶校驗或ECC購買存儲器並按其分類。奇偶校驗存儲器在將數據讀/寫到芯片時檢查錯誤。儘管奇偶校驗內存可以檢測到錯誤，但無法糾正錯誤。非奇偶校驗內存是台式計算機中最常見的類型之一，沒有錯誤檢查功能。糾錯碼（ECC）是奇偶校驗的高級版本，可以發現錯誤並在從芯片讀取/寫入該錯誤時對其進行糾正。由於這些附加功能，ECC往往比等效的非奇偶校驗RAM慢。</p>
<h2>Python 指令集</h2>
<h3>for 語法</h3>
<h3>if 語法</h3>
<p>if 選項 A: A 對的話做完這段程式碼離開</p>
<p>elif 選項 B: B 對的話做完這段程式碼離開</p>
<p>else: 上面都不對直接做完這段程式碼離開</p>